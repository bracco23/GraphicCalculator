package it.bracco23.graphiccalculator;

import it.bracco23.jfunctions.Function;
import it.bracco23.jfunctions.Utility;
import it.bracco23.debugwindow.ErrorFrame;
import it.bracco23.jfunctions.basefunctions.UnknownFunctionException;
import java.awt.Color;
import java.awt.EventQueue;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicBorders;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author emiddio
 */
public class Index extends javax.swing.JFrame {

    private Function f;
    private ErrorFrame err = null;

    /**
     * Creates new form Index
     */
    public Index(boolean debugmode) {
        initComponents();
        if (debugmode) {
            err = ErrorFrame.getErrorFrame(false);
        }
        LabelResult.setText("");
        PanelAssi.setBorder(new BasicBorders.ButtonBorder(Color.gray, Color.GRAY, Color.GRAY, Color.GRAY));
        PanelAssi.setBackground(Color.white);
        //setIconImage(new ImageIcon(getClass().getResource("res\\GraphIcon.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TextFunzione = new javax.swing.JTextField();
        ButtonLeggi = new javax.swing.JButton();
        TextValore = new javax.swing.JTextField();
        ButtonCalcola = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        LabelResult = new javax.swing.JLabel();
        ButtonDisegna = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        TextXmin = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        TextXmax = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        TextYmin = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        TextYmax = new javax.swing.JTextField();
        SliderPrecision = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        PanelAssi = new it.bracco23.graphiccalculator.Axis();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuHelp = new javax.swing.JMenu();
        MenuItemHelp = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calcolatrice Grafica");
        setIconImages(null);
        setName("Calcolatrice Gafica"); // NOI18N

        TextFunzione.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonLeggiActionPerformed(evt);
            }
        });

        ButtonLeggi.setText("Leggi");
        ButtonLeggi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonLeggiActionPerformed(evt);
            }
        });

        TextValore.setEnabled(false);
        TextValore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCalcolaActionPerformed(evt);
            }
        });

        ButtonCalcola.setText("Calcola");
        ButtonCalcola.setEnabled(false);
        ButtonCalcola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCalcolaActionPerformed(evt);
            }
        });

        jLabel1.setText("f(");

        jLabel2.setText(")=");

        LabelResult.setText("jLabel3");

        ButtonDisegna.setText("Disegna");
        ButtonDisegna.setEnabled(false);
        ButtonDisegna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDisegnaActionPerformed(evt);
            }
        });

        jLabel4.setText("Xmin:");

        TextXmin.setText("-10");
        TextXmin.setEnabled(false);
        TextXmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDisegnaActionPerformed(evt);
            }
        });

        jLabel5.setText("Xmax:");

        TextXmax.setText("10");
        TextXmax.setEnabled(false);
        TextXmax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDisegnaActionPerformed(evt);
            }
        });

        jLabel6.setText("Ymin:");

        TextYmin.setText("-10");
        TextYmin.setEnabled(false);
        TextYmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDisegnaActionPerformed(evt);
            }
        });

        jLabel7.setText("Ymax:");

        TextYmax.setText("10");
        TextYmax.setEnabled(false);
        TextYmax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDisegnaActionPerformed(evt);
            }
        });

        SliderPrecision.setEnabled(false);

        jLabel3.setText("Precisione:");

        javax.swing.GroupLayout PanelAssiLayout = new javax.swing.GroupLayout(PanelAssi);
        PanelAssi.setLayout(PanelAssiLayout);
        PanelAssiLayout.setHorizontalGroup(
            PanelAssiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelAssiLayout.setVerticalGroup(
            PanelAssiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 202, Short.MAX_VALUE)
        );

        jMenuBar1.setMaximumSize(new java.awt.Dimension(13, 0));
        jMenuBar1.setMinimumSize(new java.awt.Dimension(29, 0));
        jMenuBar1.setPreferredSize(new java.awt.Dimension(0, 0));

        MenuHelp.setText("?");

        MenuItemHelp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        MenuItemHelp.setText("Help");
        MenuItemHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemHelpActionPerformed(evt);
            }
        });
        MenuHelp.add(MenuItemHelp);

        jMenuBar1.add(MenuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelAssi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TextFunzione)
                        .addGap(38, 38, 38)
                        .addComponent(ButtonLeggi, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ButtonCalcola)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1)
                        .addGap(1, 1, 1)
                        .addComponent(TextValore, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelResult)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonDisegna, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(1, 1, 1)
                                .addComponent(TextXmin, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addGap(1, 1, 1)
                                .addComponent(TextXmax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel6)
                                .addGap(1, 1, 1)
                                .addComponent(TextYmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jLabel7)
                                .addGap(1, 1, 1)
                                .addComponent(TextYmax, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(SliderPrecision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(TextFunzione, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ButtonLeggi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextValore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonCalcola)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(LabelResult)
                    .addComponent(ButtonDisegna))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelAssi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(TextYmax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(TextYmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(TextXmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(TextXmax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(SliderPrecision, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonCalcolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCalcolaActionPerformed
        Thread t = new Thread(new Runnable() {
            @Override
            public void run() {
                final double d;
                try {
                    d = f.apply(Utility.parseNumber(TextValore.getText()));
                    EventQueue.invokeLater(new Runnable() {
                        @Override
                        public void run() {
                            LabelResult.setText(d + "");
                        }
                    });
                } catch (StringIndexOutOfBoundsException ex) {
                    JOptionPane.showMessageDialog(null, "Valore mancante o non leggibile!", "Error", JOptionPane.ERROR_MESSAGE);
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Valore mancante o non leggibile!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });
        t.start();

    }//GEN-LAST:event_ButtonCalcolaActionPerformed
    private void ButtonDisegnaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDisegnaActionPerformed
        Thread t = new Thread(new Runnable() {
            @Override
            public void run() {
                int prec = 100 + SliderPrecision.getValue() * 100;
                int xmin = (int) Math.round(Utility.parseNumber(TextXmin.getText()));
                int xmax = (int) Math.round(Utility.parseNumber(TextXmax.getText()));
                int ymin = (int) Math.round(Utility.parseNumber(TextYmin.getText()));
                int ymax = (int) Math.round(Utility.parseNumber(TextYmax.getText()));
                if (ymin < ymax && xmin < xmax) {
                    PanelAssi.setRanges(xmin, ymin, xmax, ymax);
                }
                double x[] = new double[prec];
                double y[] = new double[prec];
                for (int i = 0; i < prec; i++) {
                    x[i] = i * (PanelAssi.getXmax() - PanelAssi.getXmin()) / prec + PanelAssi.getXmin();
                    y[i] = f.apply(x[i]);
                }
                PanelAssi.setPoints(x, y);
                EventQueue.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        PanelAssi.update(PanelAssi.getGraphics());
                    }
                });
            }
        });
        t.start();
    }//GEN-LAST:event_ButtonDisegnaActionPerformed

    private void ButtonLeggiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonLeggiActionPerformed
        Thread t;
        if (TextFunzione.getText().length() != 0 && (f == null || !f.toString().equals(TextFunzione.getText()))) {
            t = new Thread(new Runnable() {
                @Override
                public void run() {
                    try {
                        f = new Function(TextFunzione.getText());
                        EventQueue.invokeLater(new Runnable() {
                            @Override
                            public void run() {
                                LabelResult.setForeground(Color.BLACK);
                                LabelResult.setText("");
                                ButtonCalcola.setEnabled(true);
                                TextValore.setEnabled(true);
                                TextValore.setText("");
                                TextXmin.setEnabled(true);
                                TextXmax.setEnabled(true);
                                TextYmin.setEnabled(true);
                                TextYmax.setEnabled(true);
                                SliderPrecision.setEnabled(true);
                                ButtonDisegna.setEnabled(true);
                                PanelAssi.resetPoints();
                                PanelAssi.update(PanelAssi.getGraphics());
                            }
                        });
                    } catch (UnknownFunctionException ex) {
                        JOptionPane.showMessageDialog(null, "Errore nel formato!\n Controlla la funzione o premi F1 per aiuto", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            });
            t.start();
        }
    }//GEN-LAST:event_ButtonLeggiActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
    }//GEN-LAST:event_jLabel3MouseClicked

    private void MenuItemHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemHelpActionPerformed
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                String s = "L'applicazione è in grado di leggere funzioni matematiche.\nè obbligatorio l'uso delle parentesi tonde per delimitare gli argomenti delle funzioni elementari, che sono:\nSeno - \"sin\" or \"sen\"\nCoseno - \"cos\"\nTangente - \"tan\"\nSeno iperbolico - \"sinh\"\nCoseno iperbolico - \"cosh\"\nTangente iperbolica - \"tanh\"\nArcoseno (funzione inverse del seno) - \"arcsin\"\nArcocoseno (funzione inversa del coseno) - \"arccos\"\nArctangente (Funzione inversa della tangente) - \"arctan\"\nLogaritmo naturale (base e) - \"log\"\nValore Assoluto - \"abs\"\n\n";
                JOptionPane.showMessageDialog(null, s, "Help", JOptionPane.INFORMATION_MESSAGE);
            }
        });
    }//GEN-LAST:event_MenuItemHelpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Index.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Index.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Index.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Index.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        // final Index k= new Index();

        final boolean deb;
        boolean temp = false;
        for (String s : args) {
            if (s.equals("-d")) {
                temp = true;
            }
        }
        deb = temp;
        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Index(deb).setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonCalcola;
    private javax.swing.JButton ButtonDisegna;
    private javax.swing.JButton ButtonLeggi;
    private javax.swing.JLabel LabelResult;
    private javax.swing.JMenu MenuHelp;
    private javax.swing.JMenuItem MenuItemHelp;
    private it.bracco23.graphiccalculator.Axis PanelAssi;
    private javax.swing.JSlider SliderPrecision;
    private javax.swing.JTextField TextFunzione;
    private javax.swing.JTextField TextValore;
    private javax.swing.JTextField TextXmax;
    private javax.swing.JTextField TextXmin;
    private javax.swing.JTextField TextYmax;
    private javax.swing.JTextField TextYmin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
